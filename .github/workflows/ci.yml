name: Rust CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build_and_test_x64:
    name: Build and Test on x64 ${{ matrix.rust }}
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly

    steps:
      - name: Install YAJL
        run: sudo apt-get install -y libyajl-dev
        continue-on-error: true

      - name: Install OpenSSL
        run: sudo apt-get install -y libssl-dev

      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - name: Display Toolchain Information
        run: |
          cargo --version --verbose
          rustc --version
          cargo clippy --version

      - name: Lint
        run: |
          cargo fmt -- --check
          cargo clippy -- -D warnings

      - name: Test
        run: |
          cargo check
          ROOT_KEYSTORE="${GITHUB_WORKSPACE}/root_keystore.p12" cargo test --all

      - name: Build
        run: |
          cargo build --release

  build_and_test_aarch64:
    name: Build and Test on aarch64 ${{ matrix.rust }}
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build and Test
        uses: uraimo/run-on-arch-action@v2.5.1
        id: build_and_test
        with:
          arch: aarch64
          distro: ubuntu22.04
          githubToken: ${{ github.token }}
          install: |
            apt-get update -q -y
            apt-get install -q -y --no-install-recommends \
              ca-certificates \
              git \
              build-essential \
              cmake \
              curl \
              libyajl-dev \
              libssl-dev
            curl --proto '=https' -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain ${{ matrix.rust }} --component "rustfmt, clippy"
          run: |
            source "$HOME/.cargo/env"
            cargo --version --verbose
            rustc --version
            cargo clippy --version
            cargo fmt -- --check
            cargo clippy -- -D warnings
            cargo check
            ROOT_KEYSTORE="${GITHUB_WORKSPACE}/root_keystore.p12" cargo test --all
            cargo build --release
